/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2021-01-18 23:23:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Models;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import models.campeao;
import models.buildcamp;

public final class getBuildChamps_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("models.buildcamp");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("models.campeao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");

	String saida = "{ \"success\": true, ";
	
	int idBuild = Integer.parseInt(request.getParameter("buildID"));
	
	buildcamp conexao = new buildcamp(idBuild);
	
	ResultSet campeoesDaBuild = conexao.selectBy("ID_BUILD", ""+conexao.getID_BUILD());
	String where = "";
	
	while(campeoesDaBuild.next()){
		where += "campeao.ID = " + campeoesDaBuild.getString("ID_CAMPEAO");
		
		if(!campeoesDaBuild.isLast()){
			where += " || ";
		}else{
			where += " order by campeao.ID";
		}
	}
	
	if(where.isBlank()){
		where = "campeao.ID = 0";
	}
	
	campeao campeoes = new campeao();
	
	ResultSet rs = campeoes.selectJoin("S.NOME as sinNOME, S.FOTO as sinFOTO, campeao.ID, campeao.NOME, campeao.FOTO", " join sincam SC on campeao.ID = SC.ID_CAMPEAO join sinergia S on S.ID = SC.ID_SINERGIA", where);

	String sinNOMEarray = "\"sinNOME\": [ ";
	String sinFOTOarray = "\"sinFOTO\": [ ";
	String campIDarray = "\"campID\": [ ";
	String campNOMEarray = "\"campNOME\": [ ";
	String campFOTOarray = "\"campFOTO\": [ ";
	String campTIPOarray = "\"campTIPO\": [ ";
	
	int idCampPassado = 0;
	int countCampTipo = 1;
	while(rs.next()){
		
		if(rs.getInt("ID") != idCampPassado){
			if(!rs.isFirst()){
				campTIPOarray += countCampTipo + ", ";	
				campIDarray += ", ";
				campNOMEarray += ", ";
				campFOTOarray += ", ";
			}
			campIDarray += rs.getInt("ID");
			campNOMEarray += "\"" + rs.getString("NOME") + "\"";
			campFOTOarray += "\"" + rs.getString("FOTO") + "\"";
			countCampTipo = 1;
		}else{
			countCampTipo++;
		}
		
		sinNOMEarray += "\"" + rs.getString("sinNOME") + "\"";
		sinFOTOarray += "\"" + rs.getString("sinFOTO") + "\"";
		
		if(!rs.isLast()){
			sinNOMEarray += ", ";
			sinFOTOarray += ", ";
		}
		
		idCampPassado = rs.getInt("ID");
	}
	
	campTIPOarray += countCampTipo + " ] }";	
	campIDarray += " ], ";
	campNOMEarray += " ], ";
	campFOTOarray += " ], ";
	sinNOMEarray += " ], ";
	sinFOTOarray += " ], ";
	
	saida += sinNOMEarray + sinFOTOarray + campIDarray + campNOMEarray + campFOTOarray + campTIPOarray;
	
	out.write(saida);
	

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
