/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2021-01-26 05:29:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Controlers;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class recover_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/Controlers/../Views/head.html", Long.valueOf(1610745455443L));
    _jspx_dependants.put("/Controlers/../Views/recoverForm.html", Long.valueOf(1610352338389L));
    _jspx_dependants.put("/Controlers/../Views/foot.html", Long.valueOf(1611638818271L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
 
	int userID = 0;

	if(session.getAttribute("userLogin") != null){	
		userID = (int) session.getAttribute("userLogin");
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta charset=\"UTF-8\">\n");
      out.write("\t\t<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("\t\t<meta http-equiv=\"content-type\" content=\"application/xhtml+xml; charset=UTF-8\">\n");
      out.write("\t\t\n");
      out.write("\t\t<link rel=\"shortcut icon\" href=\"../Imagens/Misc/favicon.png\" />\n");
      out.write("\t    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.11.2/css/all.css\">\n");
      out.write("\t    <link rel=\"stylesheet\" href=\"../MDB/css/mdb.min.css\">\n");
      out.write("\t    <link rel=\"stylesheet\" href=\"../Styles/index.css\">\n");
      out.write("\t    \n");
      out.write("\t\t<title>TFT Builder set-4</title>\n");
      out.write("\t\t\n");
      out.write("\t</head>\n");
      out.write("\t\n");
      out.write("\t<body>\n");
      out.write("\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n");
      out.write("\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.11/jquery.mask.min.js\"></script>\n");
      out.write("\t    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
 if(userID == 0){ 
      out.write("\r\n");
      out.write("\t\t");
      out.write("<div class=\"w-50 mx-auto mt-5 \">\n");
      out.write("\t<form class=\"border border-warning p-5\" method=\"POST\" id=\"recoverForm\">\n");
      out.write("\t\n");
      out.write("\t    <div class=\"text-center\">\n");
      out.write("\t\t    <h4 class=\"mb-4\">Recupere sua senha</h4>\n");
      out.write("\t\t    <h5 class=\"mb-4\"> Um email sera enviado com a nova senha </h5>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<br>\n");
      out.write("\t\t<label class=\"text-justify\"> Insira o e-mail: </label>\n");
      out.write("\t    <input type=\"email\" name=\"email\" class=\"form-control mb-4\" placeholder=\"E-mail\" maxlength=\"100\">\n");
      out.write("\t    \n");
      out.write("\t    <br>\n");
      out.write("\t\t<div class=\"text-center\">\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn btn-info\" onclick=\"window.history.back()\"> Voltar </button>\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn btn-info\" id=\"submitForm\"> Recuperar </button>\n");
      out.write("\t    </div>\n");
      out.write("\t    <div id=\"retorno\" class=\"text-danger\">  </div> \n");
      out.write("\t</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\t$(document).ready( () => {\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#submitForm\").click( () => {\n");
      out.write("\t\t\tvar formData = $(\"#recoverForm\").serialize();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.post(\"../Models/recoverPassword.jsp\", formData, (data, status) => {\n");
      out.write("\t\t\t\tif(data.success){\n");
      out.write("\t\t\t\t\twindow.alert(\"Um e-mail foi enviado com sua nova senha!\");\n");
      out.write("\t\t\t\t\twindow.location.replace(\"../Controlers/index.jsp\");\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t$(\"#retorno\").html(\"Erro! Algum dado invalido fora inserido!\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}, \"json\");\n");
      out.write("\t\t\t\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t});\n");
      out.write("</script>");
      out.write('\r');
      out.write('\n');
      out.write('	');
 }else{
		
			String redirectURL = "index.jsp";
		    response.sendRedirect(redirectURL);
		
	   } 
      out.write("\r\n");
      out.write("\t   \r\n");
      out.write("\t\n");
      out.write("\t</body>\n");
      out.write("\t<script type=\"text/javascript\" src=\"../MDB/js/mdb.min.js\"></script>\t\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
